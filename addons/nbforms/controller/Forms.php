<?php
// +----------------------------------------------------------------------
// | [RhaPHP System] Copyright (c) 2017
// +----------------------------------------------------------------------
// | [RhaPHP] 并不是自由软件,你可免费使用,未经许可不能去掉RhaPHP相关版权
// +----------------------------------------------------------------------
// | Author: Geeson <qimengkeji@vip.qq.com>
// +----------------------------------------------------------------------

namespace addons\nbforms\controller;


use app\common\controller\Addon;
use think\Db;
use think\facade\Request;

class Forms extends Addon
{
    public $adminLogin = true;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function addForm()
    {
        if (Request::isAjax()) {
            $in = input('post.');
            $in['attribute_need'] = isset($in['attribute_need']) ? array_flip($in['attribute_need']) : [];
            $need = [];
            if (!empty($in['attribute_need'])) {
                foreach ($in['attribute_need'] as $key => $value) {
                    $need[$key - 1] = 1;
                }
            }
            if (!$in['picurl']) {
                ajaxMsg('0', '封面不能为空');
            }
            $data['mid'] = $this->mid;
            $data['title'] = trim($in['title']);
            $data['title2'] = trim($in['title2']);
            $data['keyword'] = trim($in['keyword']);
            $data['picurl'] = $in['picurl'];
            $data['content'] = $in['content'];
            $data['content2'] = $in['content2'];
            $data['jump_url'] = trim($in['jump_url']);
            $data['success_msg'] = $in['success_msg'];
            $data['create_time'] = time();
            $attr = [];
            foreach ($in['attribute_sort'] as $key => $val) {
                $attr[$key] = [
                    'sotr' => $in['attribute_sort'][$key],
                    'name' => $in['attribute_name'][$key],
                    'type' => $in['attribute_type'][$key],
                    'values' => isset($in['attribute_values'][$key]) ? $in['attribute_values'][$key] : '',
                    'need' => isset($need[$key]) ? '1' : '0',
                    'defval' => $in['attribute_defval'][$key],
                    'tip' => $in['attribute_tip'][$key],
                    'regular' => $in['attribute_regular'][$key],
                    'regularMsg' => $in['attribute_regularMsg'][$key]
                ];
            }
            $data['attr_value'] = json_encode($attr);
            if ($id = Db::name('forms')->insertGetId($data)) {
                if ($reply_id = setMpKeywordByNews($data['keyword'], $data['title'], $data['picurl'], $data['content'], addonUrl('subfms/index', ['id' => $id]))) {
                    Db::name('forms')->where('id', $id)->update(['reply_id' => $reply_id]);
                    ajaxMsg(1, '操作成功');
                } else {
                    Db::name('forms')->where('id', $id)->delete();
                    ajaxMsg(0, '增加关键词失败');
                }
            } else {
                ajaxMsg(0, '增加失败');
            }
        } else {
            $this->fetch();
        }
    }


    public function lists()
    {
        $forms = Db::name('forms')->where('mid', $this->mid)->order('id DESC')->paginate(20);
        $page = $forms->render();
        $data = [];
        foreach ($forms as $key => $val) {
            $data[$key] = $val;
            if (isset($forms[$key]['attr_value'])) {
                $data[$key]['attr_value'] = json_decode($val['attr_value'], true);
            }
        }
        $this->assign('page', $page);
        $this->assign('data', $data);
        return $this->fetch();
    }


    public function edit()
    {
        $id = input('id');
        $forms = Db::name('forms')->where(['mid' => $this->mid, 'id' => $id])->find();
        $attr = json_decode($forms['attr_value'], true);
        $forms['attr_value'] = [];
        foreach ($attr as $key => $val) {
            $forms['attr_value'][$key] = $val;
//            if($val['type']==3 || $val['type']==4 ||$val['type']==5 ){
//                $valArr = preg_replace("/(\n)|(\s)|(\t)|(\')|(')|(，)/", ',', $val['values']);
//                $array=explode(",", $valArr);
//                if(isset($array[0]) && empty($array[0])){
//                    $forms['attr_value'][$key]['values'] =[];
//                }else{
//                    $forms['attr_value'][$key]['values'] = $array;
//                }
//
//            }
        }
        if (Request::isAjax()) {
            $in = input('post.');
            //$in['attribute_need'] = isset($in['attribute_need']) ? array_flip($in['attribute_need']) : [];
            $need = [];
            if (!empty($in['attribute_need'])) {
                foreach ($in['attribute_need'] as $key => $value) {
                    $need[$key - 1] = 1;
                }
            }
            if (!$in['picurl']) {
                ajaxMsg('0', '封面不能为空');
            }

            $data['mid'] = $this->mid;
            $data['title'] = trim($in['title']);
            $data['title2'] = trim($in['title2']);
            $data['keyword'] = trim($in['keyword']);
            $data['picurl'] = $in['picurl'];
            $data['content'] = $in['content'];
            $data['content2'] = $in['content2'];
            $data['jump_url'] = $in['jump_url'];
            $data['success_msg'] = $in['success_msg'];
            $data['create_time'] = time();
            $attr = [];
            foreach ($in['attribute_sort'] as $key => $val) {
                $attr[$key] = [
                    'sotr' => $in['attribute_sort'][$key],
                    'name' => $in['attribute_name'][$key],
                    'type' => $in['attribute_type'][$key],
                    'values' => isset($in['attribute_values'][$key]) ? $in['attribute_values'][$key] : '',
                    'need' => isset($need[$key-1]) ? '1' : '0',
                    'defval' => $in['attribute_defval'][$key],
                    'tip' => $in['attribute_tip'][$key],
                    'regular' => $in['attribute_regular'][$key],
                    'regularMsg' => $in['attribute_regularMsg'][$key]
                ];
            }
            $data['attr_value'] = json_encode($attr);
            if ($id = Db::name('forms')->where(['mid' => $this->mid, 'id' => input('id')])->update($data)) {
                if ($reply_id = setMpKeywordByNews($data['keyword'], $data['title'], $data['picurl'], $data['content'], addonUrl('subfms/index', ['id' => input('id')]))) {
                    ajaxMsg(1, '修改成功');
                } else {
                    ajaxMsg(0, '修改失败');
                }
            } else {
                ajaxMsg(0, '修改失败');
            }
        } else {
            $this->assign('form', $forms);
            $this->fetch();
        }
    }

    public function getData()
    {
        $data = Db::name('forms_values')
            ->alias('a')
            ->where(['a.mid' => $this->mid, 'a.forms_id' => input('id')])
            ->join('__FORMS__ b', 'b.id=a.forms_id')
            ->field('a.*,b.attr_value')
            ->order('id DESC')
            ->paginate(20);
        $data2 = [];
        foreach ($data as $key => $val) {
            $data2[$key] = $val;
            if ($val['val']) {
                $data2[$key]['val'] = json_decode($val['val'], true);
                foreach ($data2[$key]['val'] as $k => $v) {
                    if (is_array($data2[$key]['val'][$k])) {
                        array_pop($data2[$key]['val'][$k]);
                        $data2[$key]['val'][$k] = implode(',', $data2[$key]['val'][$k]);
                    } else {
                        if ($this->isImage($data2[$key]['val'][$k])) {
                            $data2[$key]['val'][$k] = '<a target="_blank" href="' . $v . '"><img class="form-image" src="' . $v . '"/></a>';
                        }

                    }


                }
            }
            if ($val['attr_value']) {
                $data2[$key]['attr_value'] = json_decode($val['attr_value'], true);
            }
        }
        $data3=[];
        $dataTitle=[];
        foreach ($data2 as $key =>$val){
            foreach ($val['attr_value'] as $key1=>$val2){
                if(array_key_exists($val2['name'],$val['val'])){
                    $data3[$key][$val2['name']]=$val['val'][$val2['name']];
                    $dataTitle[$key][$val2['name']]=$val['val'][$val2['name']];
                }else{
                    $data3[$key][$val2['name']]='';
                    $dataTitle[$key][$val2['name']]='';
                }
            }
            $dataTitle[$key]['创建时间']='';
            $dataTitle[$key]['操作']='';
            $data3[$key]['创建时间']= date('y-m-d,H:i',$val['create_time']);
            $data3[$key]['操作']="<a onclick=\"delFormsData('{$val['id']}')\" class=\"rha-bt-a\" href=\"javascript:;\">删除</a>";

        }
        $Title=[];
        if(isset($dataTitle[0])){
            $Title=$dataTitle[0];
        }
        $this->assign('page', $data->render());
        $this->assign('data', $data3);
        $this->assign('dataTitle',$Title);
        $this->fetch();
    }

    public function isImage($url)
    {
        $type = ['jpg', 'jpeg', 'png', 'gif', 'bmp'];
        foreach ($type as $val) {
            if (strpos($url, $val)) {
                return true;
            }
        }
    }


    public function delFormsData()
    {
        if (Request::isAjax()) {
            if (Db::name('forms_values')->where(['mid' => $this->mid, 'id' => input('fid')])->delete()) {
                ajaxMsg(1, '删除成功');
            } else {
                ajaxMsg(1, '操作失败');
            }

        }
    }


    public function delForms()
    {
        if (Request::isAjax()) {
            $result=Db::name('forms')->where(['mid' => $this->mid, 'id' => input('fid')])->find();
            if (!empty($result)){
                delKeywordReply($result['reply_id']);
                Db::name('forms')->where(['mid' => $this->mid, 'id' => input('fid')])->delete();
                Db::name('forms_values')->where(['mid' => $this->mid, 'forms_id' => input('fid')])->delete();
                ajaxMsg(1, '删除成功');
            }else{
                ajaxMsg(0, '没有删除的内容');
            }


        }
    }

}